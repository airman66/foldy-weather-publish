{"version":3,"file":"static/js/713.0edbbbdb.chunk.js","mappings":"uKAEA,ECEe,WACX,OACIA,EAAAA,cAAA,OAAKC,UAAU,2CACXD,EAAAA,cAAA,OAAKC,UAAU,oBACXD,EAAAA,cAAA,YACAA,EAAAA,cAAA,YACAA,EAAAA,cAAA,WACIA,EAAAA,cAAA,aAEJA,EAAAA,cAAA,WACIA,EAAAA,cAAA,cAKpB,ECjBA,ECGoB,WAChB,IAAAE,GAA2EC,EAAAA,EAAAA,YAAWC,EAAAA,GAA/EC,EAAWH,EAAXG,YAAaC,EAAmBJ,EAAnBI,oBAAqBC,EAAOL,EAAPK,QAASC,EAAaN,EAAbM,cAC5CC,EAAU,WACZ,OAAIJ,EAAYK,QAERV,EAAAA,cAAA,UAAI,qSAGJQ,EAEIR,EAAAA,cAACA,EAAAA,SAAc,KACXA,EAAAA,cAAA,UAAI,mKAA+BM,EAAoBK,MACvDX,EAAAA,cAAA,UAAI,8HACwBM,EAAoBM,QAAQ,GAAGC,YACvDb,EAAAA,cAAA,OACIc,IAAG,oCAAAC,OAAsCT,EAAoBM,QAAQ,GAAGI,KAAI,WAC5EC,IAAI,wFACJC,MAAO,GACPC,OAAQ,MAGhBnB,EAAAA,cAAA,UACIA,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,uEAAcK,EAAoBc,KAAKC,KAAK,SAC5ErB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,0IACFK,EAAoBc,KAAKE,SAAS,SAEhEtB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,gJACDK,EAAoBc,KAAKG,SAAS,SAEjEvB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,8EACZK,EAAoBc,KAAKI,WAAW,SAExDxB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,mCAAQK,EAAoBmB,KAAKC,MAAM,8BACvE1B,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,qDAAWK,EAAoBc,KAAKO,SAAS,2CAC7E3B,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,2DAAYK,EAAoBc,KAAKQ,SAAS,QAMtF5B,EAAAA,cAACA,EAAAA,SAAc,KACXA,EAAAA,cAAA,UAAI,mKAA+BK,EAAYM,MAC/CX,EAAAA,cAAA,UAAI,8HACwBK,EAAYO,QAAQ,GAAGC,YAC/Cb,EAAAA,cAAA,OACIc,IAAG,oCAAAC,OAAsCV,EAAYO,QAAQ,GAAGI,KAAI,WACpEC,IAAI,wFACJC,MAAO,GACPC,OAAQ,MAGhBnB,EAAAA,cAAA,UACIA,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,uEAAcI,EAAYe,KAAKC,KAAK,SACpErB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,0IAA0BI,EAAYe,KAAKE,SAAS,SACpFtB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,gJAA2BI,EAAYe,KAAKG,SAAS,SACrFvB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,8EAAgBI,EAAYe,KAAKI,WAAW,SAC5ExB,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,mCAAQI,EAAYoB,KAAKC,MAAM,kBAC/D1B,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,qDAAWI,EAAYe,KAAKO,SAAS,2CACrE3B,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,2DAAYI,EAAYe,KAAKQ,SAAS,OAM9F,EACMC,EAhEiE3B,EAAN4B,OAgE3C9B,EAAAA,cAACS,EAAO,MAAMT,EAAAA,cAAA,UAAI,iNAClC+B,EAAUxB,EAAUP,EAAAA,cAACgC,EAAM,MAAMH,EAEvC,OACI7B,EAAAA,cAAA,OAAKC,UAAU,QACV8B,EAGb,C","sources":["components/loader/index.js","components/loader/loader.js","components/weather-data/index.js","components/weather-data/weather-data.js"],"sourcesContent":["import Loader from \"./loader\";\n\nexport default Loader;","import React from \"react\";\n\nimport \"./loader.css\";\n\nconst Loader = () => {\n    return (\n        <div className=\"loadingio-spinner-double-ring-shjxobb55\">\n            <div className=\"ldio-euwvyklto5v\">\n                <div></div>\n                <div></div>\n                <div>\n                    <div></div>\n                </div>\n                <div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import WeatherData from \"./weather-data\";\n\nexport default WeatherData;","import React, {useContext} from \"react\";\nimport {Context} from \"../context\";\nimport Loader from \"../loader\";\nimport \"./weather-data.css\";\n\nconst WeatherData = () => {\n    const {weatherData, weatherDataImperial, loading, imperialUnits, loaded} = useContext(Context);\n    const Content = () => {\n        if (weatherData.message) {\n            return (\n                <h2>Не удалось найти погодную информацию по данному городу</h2>\n            );\n        } else {\n            if (imperialUnits) {\n                return (\n                    <React.Fragment>\n                        <h2>Погодная информация по городу {weatherDataImperial.name}</h2>\n                        <h4>\n                            Погода описывается как {weatherDataImperial.weather[0].description}\n                            <img\n                                src={`http://openweathermap.org/img/wn/${weatherDataImperial.weather[0].icon}@2x.png`}\n                                alt=\"погодная иконка\"\n                                width={45}\n                                height={45}\n                            />\n                        </h4>\n                        <ul>\n                            <li className=\"weather-data-li\">Температура: {weatherDataImperial.main.temp}&deg;F</li>\n                            <li className=\"weather-data-li\">\n                                Минимальная температура: {weatherDataImperial.main.temp_min}&deg;F\n                            </li>\n                            <li className=\"weather-data-li\">\n                                Максимальная температура: {weatherDataImperial.main.temp_max}&deg;F\n                            </li>\n                            <li className=\"weather-data-li\">\n                                Ощущается как: {weatherDataImperial.main.feels_like}&deg;F\n                            </li>\n                            <li className=\"weather-data-li\">Ветер: {weatherDataImperial.wind.speed} м/час</li>\n                            <li className=\"weather-data-li\">Давление: {weatherDataImperial.main.pressure} мм рт.ст</li>\n                            <li className=\"weather-data-li\">Влажность: {weatherDataImperial.main.humidity} %</li>\n                        </ul>\n                    </React.Fragment>\n                );\n            } else {\n                return (\n                    <React.Fragment>\n                        <h2>Погодная информация по городу {weatherData.name}</h2>\n                        <h4>\n                            Погода описывается как {weatherData.weather[0].description}\n                            <img\n                                src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\n                                alt=\"погодная иконка\"\n                                width={45}\n                                height={45}\n                            />\n                        </h4>\n                        <ul>\n                            <li className=\"weather-data-li\">Температура: {weatherData.main.temp}&deg;C</li>\n                            <li className=\"weather-data-li\">Минимальная температура: {weatherData.main.temp_min}&deg;C</li>\n                            <li className=\"weather-data-li\">Максимальная температура: {weatherData.main.temp_max}&deg;C</li>\n                            <li className=\"weather-data-li\">Ощущается как: {weatherData.main.feels_like}&deg;C</li>\n                            <li className=\"weather-data-li\">Ветер: {weatherData.wind.speed} м/с</li>\n                            <li className=\"weather-data-li\">Давление: {weatherData.main.pressure} мм рт.ст</li>\n                            <li className=\"weather-data-li\">Влажность: {weatherData.main.humidity} %</li>\n                        </ul>\n                    </React.Fragment>\n                );\n            }\n        }\n    };\n    const data = loaded ? <Content /> : <h2>В этой сессии вы пока не делали запросов</h2>;\n    const content = loading ? <Loader /> : data;\n\n    return (\n        <div className=\"mb-4\">\n            {content}\n        </div>\n    );\n};\n\nexport default WeatherData;"],"names":["React","className","_useContext","useContext","Context","weatherData","weatherDataImperial","loading","imperialUnits","Content","message","name","weather","description","src","concat","icon","alt","width","height","main","temp","temp_min","temp_max","feels_like","wind","speed","pressure","humidity","data","loaded","content","Loader"],"sourceRoot":""}